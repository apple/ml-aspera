# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = aspera
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/pyscaffold/pyscaffold/
# Add here related links, for example:
project_urls =
    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.11

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    anthropic >= 0.34.2, <1.0.0
    attrs >= 23.2.0, <24.0.0
    beartype >= 0.18.5
    black
    diskcache>=5.6.3, <6.0.0
    google-cloud-aiplatform == 1.67.1
    huggingface_hub
    hydra-core >= 1.3.2, <1.4.0
    importlib-resources>=6.4.0, <7.0.0
    Jinja2 >= 3.1.3, <4.0.0
    mypy>=1.10.0, <2.0.0
    nestedtext >= 3.7.0, <4.0.0
    openai >= 1.46.0, <2.0.0
    packaging >= 24.2
    polars >= 1.0.0, <=1.16.0
    pydantic >= 2.5.1, <3.0.0
    pyrate_limiter>=3.6.1, <4.0.0
    rapidfuzz >= 3.9.4, <4.0.0
    requests >= 2.32.4
    rich >= 13.7.1, <14.0.0
    tenacity >= 9.0.0, <10.0.0
    tiktoken >=0.7.0, <1.0.0
    torch >= 2.7.1-rc1
    transformers >=4.52.1
    urllib3 >= 2.5.0

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install Per-Aspera[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest 
    pytest-cov
    isort
    typing-extensions

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = aspera.module:function
; For example:
console_scripts =
    aspera-annotate-queries = aspera.endpoints.interactive_annotate_queries:annotate_queries
    aspera-generate-queries = aspera.endpoints.interactive_generate_queries:generate_complex_queries
    aspera-llm-judge = aspera.endpoints.llm_judge_evaluator:evaluate
    aspera-read-edits = aspera.endpoints.visualisation:edits
    aspera-read-sample-solutions = aspera.endpoints.visualisation:queries
    aspera-read-utterances = aspera.endpoints.visualisation:utterances
    aspera-run-agent = aspera.endpoints.agent_runner:run_agent
    aspera-view-results = aspera.endpoints.view_agent_results_jsonl:view_results_jsonl

# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
;    --cov aspera --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 100
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
    src/aspera/prompting/system_turn_templates.py
    src/aspera/prompting/user_turn_templates.py
    examples/
[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.5
package = aspera
extensions =
    dsproject
    github_actions
    markdown
    no_skeleton
    pre_commit
