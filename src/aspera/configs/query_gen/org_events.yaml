defaults:
  - turn_templates: default
  - generation_args@_here_: default
  - parser: default
  - annotation: default
  - guidelines: org_events

# apps with documentation stubs in src/aspera/apps and implementation in src/aspera/apps_implementation
apps: [exceptions, time_utils, room_booking, company_directory, work_calendar]
# additional tools the LLM can use to simulate the environment state
# documentation stubs in src/aspera/runtime_state_generation_tools and implementation in src/aspera/runtime_state_generation_tools_implementation
# app_name::tool (where app_name is module under src/aspera/runtime_state_generation_tools
#  and tool is a function therein)
simulation_tools:
  - room_booking::simulate_conference_room
  - company_directory::simulate_org_structure
  - company_directory::simulate_vacation_schedule
  - work_calendar::simulate_user_calendar
  - work_calendar::simulate_employee_calendar
# additional tools the LLM can for evaluation
# documentation stubs in src/aspera/evaluation_tools and implementation in src/aspera/evaluation_tools_implementation
# app_name::tool (where app_name is module under src/aspera/evaluation_tools
#  and tool is a function therein)
evaluation_tools:
  - exceptions::SolutionError
  - work_calendar::assert_user_calendar_shared
  - time_utils::repetition_schedule
# in-context examples for data generation, located in src/aspera/examples
examples:
  query_solution: [ work_calendar_query_solution ]
  runtime_setup: [ work_calendar_runtime_setup ]
  evaluation: [ work_calendar_evaluation ]
# queries that already exist in the corpus - included in the prompt to encourage generation of new queries
queries: ${query_loader:${annotation.corpus_dir}}
# if specified, this string will be concatenated with the apps configured in this scenario. Otherwise, a string formed
#  by concatenating the name of the in-context examples modules is created
scenario_name_suffix: org_events
hydra:
  run:
    dir: ${root:session_logs/query_generation/${scenario_name:${apps},${examples},${scenario_name_suffix}}}

output_dir: ${hydra:run.dir}

# possible scenarios
# time utils, reminders, search (?), org : change reminders based on a query to search the reminders
